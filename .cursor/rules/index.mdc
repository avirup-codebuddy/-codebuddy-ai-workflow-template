---
description: 
globs: 
alwaysApply: true
---
# IEE Project - Master Rule Index

This document serves as the central index for all active Cursor rules within this repository, organized by category. These rules define processes, structures, and guidelines for development of the IEE (Integrated Education Evaluation) project.

## Core & General

Fundamental project structure, setup, and general development guidelines.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @project-structure.mdc             | Core project structure and monorepo organization            |
| @coding-standards.mdc              | Coding standards and best practices for development         |

## Frontend & UI

Guidelines for building user interfaces and handling frontend logic.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @shared-components.mdc             | Shared UI components documentation and usage                |
| @ui-generation.mdc                 | UI generation and styling guidelines                        |
| @api-integration.mdc               | API integration patterns and best practices                 |
| @table-sorting.mdc                 | Table sorting implementation guidelines                     |
| @form-and-api.mdc                  | Form handling and API integration patterns                  |

## Testing & Quality

Guidelines for testing, code quality, and deployment.

| Rule File                          | Description                                                 |
| :--------------------------------- | :---------------------------------------------------------- |
| @testing-and-quality.mdc           | Testing, code quality, and CI/CD standards                  |

## Quick Reference

### Essential File Structure
```
@iee/
├── apps/
│   ├── admin/ (Vite + React)
│   └── web/ (Next.js)
├── packages/
└── configs/
```

### Key Development Guidelines

#### Component Development
- Use functional components with TypeScript
- Follow single responsibility principle
- Place shared components in `./apps/{Module Name}/src/components/shared`

#### Styling
- Use TailwindCSS for utility-first styling
- Use Mantine for advanced UI components
- Use `cn()` function for class merging
- Avoid inline styles

#### Forms & API
- Use react-hook-form with yup validation
- Follow API integration patterns
- Maintain proper type definitions

#### Testing
- Implement Jest unit tests
- Use MSW for API mocking
- Document with Storybook
- Maintain 80% code coverage

## Rule Application Priority

| Rule Category          | Priority | Applies To                    |
|-----------------------|----------|-------------------------------|
| Core & General        | High     | All project files            |
| Frontend & UI         | High     | UI and component files       |
| Testing & Quality     | High     | Test files & CI/CD           |

## Additional Resources

- [TanStack Query Documentation](mdc:@iee/https:/tanstack.com/query/v4)
- [Next.js Documentation](mdc:@iee/https:/nextjs.org/docs)
- [Mantine UI](mdc:@iee/https:/mantine.dev)
- [TailwindCSS](mdc:@iee/https:/tailwindcss.com)

---

For detailed information about each rule set, please refer to the individual rule files in the `.cursor/rules/` directory. Rules are maintained and updated regularly to ensure they reflect current best practices and project requirements.
